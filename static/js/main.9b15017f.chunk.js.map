{"version":3,"sources":["components/Header.js","components/DisplayPart/CorrectData.js","components/DisplayPart/Display.js","components/Input/Link.js","components/Input/InputField.js","App.js","index.js"],"names":["Header","className","CorrectData","props","name","region","time","temp","condition","src","icon","alt","Display","useState","weatherLocation","setWeatherLocation","weatherCurrent","setWeatherCurrent","weatherCurrentCond","setWeatherCurrentCond","isNull","setIsNull","getWeatherData","searchName","a","fetch","then","res","ok","json","swal","data","location","current","useEffect","localtime","temp_c","text","Link","href","target","rel","InputField","isValid","setIsValid","searchInput","useRef","placeholder","ref","onClick","value","trim","length","setSearchName","App","ReactDOM","render","Fragment","document","getElementById"],"mappings":"sOAMeA,EAJA,WACb,OAAO,oBAAIC,UAAU,cAAd,gC,uCCgBMC,EAjBK,SAACC,GACnB,OACE,oCACE,+BACE,sBAAMF,UAAU,QAAhB,SAAyBE,EAAMC,OAC/B,sBAAMH,UAAU,SAAhB,SAA0BE,EAAME,YAElC,4BAAIF,EAAMG,OACV,gCACE,oBAAGL,UAAU,OAAb,UAAqBE,EAAMI,KAA3B,UACA,mBAAGN,UAAU,YAAb,SAA0BE,EAAMK,YAChC,qBAAKC,IAAKN,EAAMO,KAAMC,IAAI,kCCuCnBC,EA/CC,SAACT,GACf,MAA8CU,mBAAS,IAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAA4CF,mBAAS,IAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAAoDJ,mBAAS,IAA7D,mBAAOK,EAAP,KAA2BC,EAA3B,KACA,EAA4BN,oBAAS,GAArC,mBAAOO,EAAP,KAAeC,EAAf,KAEMC,EAAc,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACrBC,MAAM,mFAAD,OACgFF,EADhF,YAGFG,MAAK,SAACC,GACL,GAAIA,EAAIC,GAEN,OADAP,GAAU,GACHM,EAAIE,OAEbR,GAAU,GACVS,IAAK,SAAU,wBAAyB,YAEzCJ,MAAK,SAACK,GACLhB,EAAmBgB,EAAKC,UACxBf,EAAkBc,EAAKE,SACvBd,EAAsBY,EAAKE,QAAQzB,cAflB,2CAAH,sDAuBpB,OAJA0B,qBAAU,WACRZ,EAAenB,EAAMoB,cACpB,CAACpB,EAAMoB,aAGR,yBAAStB,UAAU,UAAnB,SACImB,EAUA,oBAAInB,UAAU,UAAd,4BATA,cAAC,EAAD,CACEG,KAAMU,EAAgBV,KACtBC,OAAQS,EAAgBT,OACxBC,KAAMQ,EAAgBqB,UACtB5B,KAAMS,EAAeoB,OACrB5B,UAAWU,EAAmBmB,KAC9B3B,KAAMQ,EAAmBR,UC3BpB4B,EAdF,WACX,OACE,sBAAMrC,UAAU,OAAhB,SACE,mBACEsC,KAAK,8FACLC,OAAO,SACPC,IAAI,aAHN,6CC8BSC,EA9BI,SAACvC,GAClB,MAA8BU,oBAAS,GAAvC,mBAAO8B,EAAP,KAAgBC,EAAhB,KAEMC,EAAcC,mBAYpB,OACE,0BAAS7C,UAAU,kBAAnB,UACE,uBACE8C,YAAY,6BACZC,IAAKH,EACL5C,UAAS,iBAAY0C,GAAW,WAElC,cAAC,EAAD,IACA,wBAAQM,QAlBG,WACmC,IAA5CJ,EAAYZ,QAAQiB,MAAMC,OAAOC,QACnCR,GAAW,GACXzC,EAAMkD,cAAcR,EAAYZ,QAAQiB,SAExCN,GAAW,GACXd,IAAK,SAAU,wBAAyB,WAYf7B,UAAU,YAAnC,wBCRSqD,MAZf,WACE,MAAoCzC,mBAAS,aAA7C,mBAAOU,EAAP,KAAmB8B,EAAnB,KAEA,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAYA,cAAeA,IAC3B,cAAC,EAAD,CAAS9B,WAAYA,Q,MCV3BgC,IAASC,OACP,cAAC,IAAMC,SAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9b15017f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return <h1 className=\"main_header\">Weather condition</h1>;\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst CorrectData = (props) => {\r\n  return (\r\n    <section>\r\n      <h1>\r\n        <span className=\"place\">{props.name}</span>\r\n        <span className=\"region\">{props.region}</span>\r\n      </h1>\r\n      <p>{props.time}</p>\r\n      <div>\r\n        <p className=\"temp\">{props.temp}Â°</p>\r\n        <p className=\"condition\">{props.condition}</p>\r\n        <img src={props.icon} alt=\"weather condition icon\" />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CorrectData;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport swal from \"sweetalert\";\r\n\r\nimport CorrectData from \"./CorrectData\";\r\n\r\nconst Display = (props) => {\r\n  const [weatherLocation, setWeatherLocation] = useState(\"\");\r\n  const [weatherCurrent, setWeatherCurrent] = useState(\"\");\r\n  const [weatherCurrentCond, setWeatherCurrentCond] = useState(\"\");\r\n  const [isNull, setIsNull] = useState(false);\r\n\r\n  const getWeatherData = async (searchName) => {\r\n    fetch(\r\n      `https://api.weatherapi.com/v1/current.json?key=caab7ff0f39141e6a8731620212206&q=${searchName}&aqi=no`\r\n    )\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          setIsNull(false);\r\n          return res.json();\r\n        }\r\n        setIsNull(true);\r\n        swal(\"Error!\", \"Enter valid City Name\", \"error\");\r\n      })\r\n      .then((data) => {\r\n        setWeatherLocation(data.location);\r\n        setWeatherCurrent(data.current);\r\n        setWeatherCurrentCond(data.current.condition);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getWeatherData(props.searchName);\r\n  }, [props.searchName]);\r\n\r\n  return (\r\n    <section className=\"display\">\r\n      {!isNull ? (\r\n        <CorrectData\r\n          name={weatherLocation.name}\r\n          region={weatherLocation.region}\r\n          time={weatherLocation.localtime}\r\n          temp={weatherCurrent.temp_c}\r\n          condition={weatherCurrentCond.text}\r\n          icon={weatherCurrentCond.icon}\r\n        />\r\n      ) : (\r\n        <h1 className=\"no_data\">No Data Found!</h1>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import React from \"react\";\r\n\r\nconst Link = () => {\r\n  return (\r\n    <span className=\"link\">\r\n      <a\r\n        href=\"https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes#Current_ISO_3166_country_codes\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        Check Your Country Code here\r\n      </a>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Link;\r\n","import React, { useState, useRef } from \"react\";\r\nimport swal from \"sweetalert\";\r\n\r\nimport Link from \"./Link\";\r\n\r\nconst InputField = (props) => {\r\n  const [isValid, setIsValid] = useState(true);\r\n\r\n  const searchInput = useRef();\r\n\r\n  const search = () => {\r\n    if (searchInput.current.value.trim().length !== 0) {\r\n      setIsValid(true);\r\n      props.setSearchName(searchInput.current.value);\r\n    } else {\r\n      setIsValid(false);\r\n      swal(\"Error!\", \"Enter valid City Name\", \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"input_container\">\r\n      <input\r\n        placeholder=\"City Name,country code....\"\r\n        ref={searchInput}\r\n        className={`input ${!isValid && \"empty\"}`}\r\n      />\r\n      <Link />\r\n      <button onClick={search} className=\"input-btn\">\r\n        Search\r\n      </button>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default InputField;\r\n","import { useState } from \"react\";\n\nimport \"./App.css\";\n\nimport Header from \"./components/Header\";\nimport Display from \"./components/DisplayPart/Display\";\nimport InputField from \"./components/Input/InputField\";\n\nfunction App() {\n  const [searchName, setSearchName] = useState(\"Hyderabad\");\n\n  return (\n    <>\n      <Header />\n      <InputField setSearchName={setSearchName} />\n      <Display searchName={searchName} />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n\nif (module.hot) {\n  module.hot.accept();\n}\n"],"sourceRoot":""}